{"version":3,"sources":["webpack:///./node_modules/ionicons/dist/esm/legacy/chunk-2b29c7de.js","webpack:///./node_modules/ionicons/dist/esm/legacy/ion-icon.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AACI;;;;;;;;;;;;;AC3FhE;AAAA;AAAA;AAAA;AAAyG;AAC7B;AAC5E;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA,gBAAgB,4DAAK;AACrB;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8BAA8B,oCAAoC,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAM;AAC5B;AACA;AACA,iDAAiD,sCAAsC,EAAE;AACzF;AACA;AACA;AACA,wBAAwB,4DAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,CAAC,oDAAI,GAAG,2CAA2C,gEAAgE,kHAAkH;AACtP,cAAc,4DAAC,SAAS,kDAAkD;AAC1E,cAAc,4DAAC,SAAS,sBAAsB;AAC9C;AACA;AACA,0BAA0B,gBAAgB,EAAE;AAC5C;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,4DAAU,OAAO,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,eAAe,qBAAqB,UAAU,WAAW,eAAe,kBAAkB,yCAAyC,iCAAiC,gBAAgB,cAAc,YAAY,WAAW,6BAA6B,6BAA6B,qBAAqB,mBAAmB,yBAAyB,mBAAmB,yBAAyB,kBAAkB,sCAAsC,0BAA0B,kDAAkD,4BAA4B,oDAAoD,2BAA2B,mDAAmD,0BAA0B,kDAAkD,0BAA0B,kDAAkD,yBAAyB,iDAAiD,wBAAwB,gDAAgD,yBAAyB,iDAAiD,uBAAuB,+CAA+C,EAAE,EAAE;AAC1nC;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AAC4B","file":"77.af75ac16c22b3ae3062b.js","sourcesContent":["import { g as getAssetPath } from './chunk-a6a54157.js';\nvar CACHED_MAP;\nvar getIconMap = function () {\n    if (!CACHED_MAP) {\n        var win = window;\n        win.Ionicons = win.Ionicons || {};\n        CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n};\nvar addIcons = function (icons) {\n    var map = getIconMap();\n    Object.keys(icons).forEach(function (name) {\n        map.set(name, icons[name]);\n    });\n};\nvar getUrl = function (i) {\n    var url = getSrc(i.src);\n    if (url) {\n        return url;\n    }\n    url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n    if (url) {\n        return getNamedUrl(url);\n    }\n    if (i.icon) {\n        url = getSrc(i.icon);\n        if (url) {\n            return url;\n        }\n        url = getSrc(i.icon[i.mode]);\n        if (url) {\n            return url;\n        }\n    }\n    return null;\n};\nvar getNamedUrl = function (name) {\n    var url = getIconMap().get(name);\n    if (url) {\n        return url;\n    }\n    return getAssetPath(\"svg/\" + name + \".svg\");\n};\nvar getName = function (name, icon, mode, ios, md) {\n    // default to \"md\" if somehow the mode wasn't set\n    mode = (mode && mode.toLowerCase()) === 'ios' ? 'ios' : 'md';\n    // if an icon was passed in using the ios or md attributes\n    // set the iconName to whatever was passed in\n    if (ios && mode === 'ios') {\n        name = ios.toLowerCase();\n    }\n    else if (md && mode === 'md') {\n        name = md.toLowerCase();\n    }\n    else {\n        if (!name && icon && !isSrc(icon)) {\n            name = icon;\n        }\n        if (isStr(name)) {\n            name = name.toLowerCase();\n            if (!/^md-|^ios-|^logo-/.test(name)) {\n                // this does not have one of the defaults\n                // so lets auto add in the mode prefix for them\n                name = mode + '-' + name;\n            }\n        }\n    }\n    if (!isStr(name) || name.trim() === '') {\n        return null;\n    }\n    // only allow alpha characters and dash\n    var invalidChars = name.replace(/[a-z]|-|\\d/gi, '');\n    if (invalidChars !== '') {\n        return null;\n    }\n    return name;\n};\nvar getSrc = function (src) {\n    if (isStr(src)) {\n        src = src.trim();\n        if (isSrc(src)) {\n            return src;\n        }\n    }\n    return null;\n};\nvar isSrc = function (str) {\n    return str.length > 0 && /(\\/|\\.)/.test(str);\n};\nvar isStr = function (val) { return typeof val === 'string'; };\nexport { addIcons as a, getName as b, getUrl as g, isStr as i };\n","import { r as registerInstance, c as getMode, h, H as Host, d as getElement } from './chunk-a6a54157.js';\nimport { i as isStr, g as getUrl, b as getName } from './chunk-2b29c7de.js';\nvar validateContent = function (svgContent) {\n    if (svgContent) {\n        var div = document.createElement('div');\n        div.innerHTML = svgContent;\n        // setup this way to ensure it works on our buddy IE\n        for (var i = div.childNodes.length - 1; i >= 0; i--) {\n            if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n                div.removeChild(div.childNodes[i]);\n            }\n        }\n        // must only have 1 root element\n        var svgElm = div.firstElementChild;\n        if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n            svgElm.setAttribute('class', 's-ion-icon');\n            // root element must be an svg\n            // lets double check we've got valid elements\n            // do not allow scripts\n            if (isValid(svgElm)) {\n                return div.innerHTML;\n            }\n        }\n    }\n    return '';\n};\nvar isValid = function (elm) {\n    if (elm.nodeType === 1) {\n        if (elm.nodeName.toLowerCase() === 'script') {\n            return false;\n        }\n        for (var i = 0; i < elm.attributes.length; i++) {\n            var val = elm.attributes[i].value;\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n                return false;\n            }\n        }\n        for (var i = 0; i < elm.childNodes.length; i++) {\n            if (!isValid(elm.childNodes[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nvar requests = new Map();\nvar getSvgContent = function (url) {\n    // see if we already have a request for this url\n    var req = requests.get(url);\n    if (!req) {\n        // we don't already have a request\n        req = fetch(url).then(function (rsp) {\n            if (rsp.status <= 299) {\n                return rsp.text();\n            }\n            return Promise.resolve(null);\n        }).then(function (svgContent) { return validateContent(svgContent); });\n        // cache for the same requests\n        requests.set(url, req);\n    }\n    return req;\n};\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nvar Icon = /** @class */ (function () {\n    function Icon(hostRef) {\n        registerInstance(this, hostRef);\n        this.mode = getIonMode(this);\n        this.isVisible = false;\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n    }\n    Icon.prototype.connectedCallback = function () {\n        var _this = this;\n        // purposely do not return the promise here because loading\n        // the svg file should not hold up loading the app\n        // only load the svg if it's visible\n        this.waitUntilVisible(this.el, '50px', function () {\n            _this.isVisible = true;\n            _this.loadIcon();\n        });\n    };\n    Icon.prototype.disconnectedCallback = function () {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    };\n    Icon.prototype.waitUntilVisible = function (el, rootMargin, cb) {\n        var _this = this;\n        if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n            var io_1 = this.io = new window.IntersectionObserver(function (data) {\n                if (data[0].isIntersecting) {\n                    io_1.disconnect();\n                    _this.io = undefined;\n                    cb();\n                }\n            }, { rootMargin: rootMargin });\n            io_1.observe(el);\n        }\n        else {\n            // browser doesn't support IntersectionObserver\n            // so just fallback to always show it\n            cb();\n        }\n    };\n    Icon.prototype.loadIcon = function () {\n        var _this = this;\n        if (this.isVisible) {\n            var url = getUrl(this);\n            if (url) {\n                getSvgContent(url)\n                    .then(function (svgContent) { return _this.svgContent = svgContent; });\n            }\n        }\n        if (!this.ariaLabel) {\n            var label = getName(this.name, this.icon, this.mode, this.ios, this.md);\n            // user did not provide a label\n            // come up with the label based on the icon name\n            if (label) {\n                this.ariaLabel = label\n                    .replace('ios-', '')\n                    .replace('md-', '')\n                    .replace(/\\-/g, ' ');\n            }\n        }\n    };\n    Icon.prototype.render = function () {\n        var _a, _b;\n        var mode = this.mode || 'md';\n        var flipRtl = this.flipRtl || (this.ariaLabel && this.ariaLabel.indexOf('arrow') > -1 && this.flipRtl !== false);\n        return (h(Host, { role: \"img\", class: Object.assign((_a = {}, _a[mode] = true, _a), createColorClasses(this.color), (_b = {}, _b[\"icon-\" + this.size] = !!this.size, _b['flip-rtl'] = !!flipRtl && this.el.ownerDocument.dir === 'rtl', _b)) }, ((this.svgContent)\n            ? h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })\n            : h(\"div\", { class: \"icon-inner\" }))));\n    };\n    Object.defineProperty(Icon, \"assetsDirs\", {\n        get: function () { return [\"svg\"]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"watchers\", {\n        get: function () {\n            return {\n                \"name\": [\"loadIcon\"],\n                \"src\": [\"loadIcon\"],\n                \"icon\": [\"loadIcon\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"style\", {\n        get: function () { return \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box!important;box-sizing:content-box!important}.icon-inner,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px!important}:host(.icon-large){font-size:32px!important}:host(.ion-color){color:var(--ion-color-base)!important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary,#3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary,#0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary,#f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success,#10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning,#ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger,#f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light,#f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium,#989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark,#222428)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Icon;\n}());\nvar getIonMode = function (ref) {\n    return getMode(ref) || document.documentElement.getAttribute('mode') || 'md';\n};\nvar createColorClasses = function (color) {\n    var _a;\n    return (color) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : null;\n};\nexport { Icon as ion_icon };\n"],"sourceRoot":""}